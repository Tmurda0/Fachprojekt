import "platform:/resource/info.scce.cinco.fp.compdsl/model/generated/ComponentDsl.ecore" as comp
import "model/Mainboard.mgl" as mainboard

id info.scce.cinco.product.fp.pcconfig.pc.mgl
stylePath "model/Configurator.style"

@generatable("info.scce.cinco.product.fp.pcconfig.generator.Generator", "configuration-gen")
@primeviewer
@mcam("check")
@mcam_checkmodule("info.scce.cinco.product.fp.pcconfig.checks.pc.PowerCheck")
@mcam_checkmodule("info.scce.cinco.product.fp.pcconfig.checks.pc.MainboardTypeCheck")
@mcam_checkmodule("info.scce.cinco.product.fp.pcconfig.checks.pc.MainboardSataAmountCheck")
@postCreate("info.scce.cinco.product.fp.pcconfig.hooks.pc.PostCreatePC")
graphModel PC {
	diagramExtension "pc"
	containableElements(PCNode[0,1], PriceNode[1,1], PowerNode[1,1])
}

@disable(resize)
@postCreate("info.scce.cinco.product.fp.pcconfig.hooks.pc.PostCreatePCNode")
@preDelete("info.scce.cinco.product.fp.pcconfig.hooks.pc.PreDeletePCNode")
container PCNode {
	style caseStyle
	
	@pvFileExtension("comp")
	@pvLabel(name)
	prime comp.Case as PCcase
	
	containableElements(
		PrimeMainboardNodeContainer[1,1], 
		DriveNodeContainer[0,*], PSUNodeContainer[1,1]
	)
	
	incomingEdges(*[0,0])
	outgoingEdges(*[0,0])
}



@disable(resize, create, delete, move, select)
container PrimeMainboardNodeContainer {
	style containerStyle("Mainboard")
	
	containableElements(PrimeMainboardNode[0,1])
	
	incomingEdges(*[0,0])
	outgoingEdges(*[0,0])
}

@disable(resize)
@postMove("info.scce.cinco.product.fp.pcconfig.hooks.pc.PostMovePrimeMainboardNode")
@postCreate("info.scce.cinco.product.fp.pcconfig.hooks.pc.PostCreatePrimeMainboardNode")
@preDelete("info.scce.cinco.product.fp.pcconfig.hooks.pc.PreDeletePrimeMainboardNode")
node PrimeMainboardNode {
	style mainboardStyle
	
	prime mainboard::Mainboard as mainboardPrime
	
	incomingEdges(*[0,0])
	outgoingEdges(*[0,0])
}


@disable(resize, create, delete, move, select)
container DriveNodeContainer {
	style containerStyle("Drive")
	
	containableElements(DriveNode[0,1])
	
	incomingEdges(*[0,0])
	outgoingEdges(*[0,0])
}

@disable(resize)
@postMove("info.scce.cinco.product.fp.pcconfig.hooks.pc.PostMoveDriveNode")
@postCreate("info.scce.cinco.product.fp.pcconfig.hooks.pc.PostCreateDriveNode")
@preDelete("info.scce.cinco.product.fp.pcconfig.hooks.pc.PreDeleteDriveNode")
node DriveNode {
	style driveStyle("${drivePrime.displayName}")
	
	@pvFileExtension("comp")
	@pvLabel(name)
	prime comp.Drive as drivePrime
	
	incomingEdges(*[0,0])
	outgoingEdges(*[0,0])
}


@disable(resize, create, delete, move, select)
container PSUNodeContainer {
	style containerStyle("PSU")
	
	containableElements(PSUNode[0,1])
	
	incomingEdges(*[0,0])
	outgoingEdges(*[0,0])
}

@disable(resize)
@postMove("info.scce.cinco.product.fp.pcconfig.hooks.pc.PostMovePSUNode")
@postCreate("info.scce.cinco.product.fp.pcconfig.hooks.pc.PostCreatePSUNode")
@preDelete("info.scce.cinco.product.fp.pcconfig.hooks.pc.PreDeletePSUNode")
node PSUNode {
	style psuStyle("${psuPrime.displayName}")
	
	@pvFileExtension("comp")
	@pvLabel(name)
	prime comp.PSU as psuPrime
	
	incomingEdges(*[0,0])
	outgoingEdges(*[0,0])
}

@disable(resize, create, delete, move, select)
node PriceNode {
	style textStyle("Price: ${price} â‚¬")
	
	attr EDouble as price
	
	incomingEdges(*[0,0])
	outgoingEdges(*[0,0])
}

@disable(resize, create, delete, move, select)
node PowerNode {
	style textStyle("Available Power: ${power} W")
	
	attr EInt as power
	
	incomingEdges(*[0,0])
	outgoingEdges(*[0,0])
}